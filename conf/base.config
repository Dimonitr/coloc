process {
  container = params.container

  cpus = { check_max( 2 * task.attempt, 'cpus' ) }
  memory = { check_max( 8.GB * task.attempt, 'memory' ) }
  time = { check_max( 4.h * task.attempt, 'time' ) }

  maxRetries = 2
  maxErrors = '-1'

  // errorStrategy = { task.exitStatus in [143,137,104,134,139] ? 'retry' : 'terminate' }
  errorStrategy = { task.exitStatus in [1] ? 'terminate' : 'retry' }

  withName: create_reference_file {
      memory = {check_max(8.GB*task.attempt, 'memory')}
      cpus = 1
      time = {check_max(2.h * task.attempt, 'time')}
  }

  withName: run_coloc_v5 {
      memory = {check_max(32.GB*task.attempt, 'memory')}
      cpus = 1
      time= { check_max(4.h * task.attempt, 'time')}
  }

  withName: run_coloc_v3 {
      memory = {check_max(32.GB*task.attempt, 'memory')}
      cpus = 1
      time= { check_max(4.h * task.attempt, 'time')}
  }

  withName: merge_coloc_v5_results {
      memory = { check_max( 8.GB * task.attempt, 'memory' ) }
      cpus = 1
      time = { check_max( 2.h * task.attempt, 'time' ) }
  }

  withName: merge_coloc_v3_results {
      memory = { check_max( 8.GB * task.attempt, 'memory' ) }
      cpus = 1
      time = { check_max( 2.h * task.attempt, 'time' ) }
  }

}

params {
  // Defaults only, expecting to be overwritten
  max_memory = 128.GB
  max_cpus = 16
  max_time = 120.h
}
